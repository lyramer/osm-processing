log in using
shell> mysql -u root -p


## CREATING THE TABLE THAT THE OVERPASS DATA GOES INTO

CREATE TABLE IF NOT EXISTS `streets`.`VICTORIA` (
	`ID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY, 
	`FEATURE` TEXT, 
	`WAY_ID` TEXT,
	`HIGHWAY` TEXT, 
	`NAME` TEXT, 
	`GEOTYPE` TEXT, 
	`COORDINATES` LONGTEXT, 
	`ORIGIN` INT, 
	`TYPE` INT, 
	`OCC` INT, 
	`BAND` TEXT, 
	`ESTATE` TEXT, 
	`DISPLAY` TINYINT(1) NOT NULL, 
	`STORY` MEDIUMTEXT, 
	`LINK` TEXT, 
	`LAST_UPDATED` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);



## LOADING SAID DATA FROM THE FILE GENERATED BY THE json_extract.js file

LOAD DATA INFILE '/home/andy/work/streets/output/extract.tsv' 
INTO TABLE `streets`.`VICTORIA` (FEATURE, WAY_ID, HIGHWAY, NAME, GEOTYPE, COORDINATES);



## CREATING THE TABLE FOR THE HISTORY DATA TO BE UPLOADED TO
## THEORETICALLY THIS COULD BE UPLOADED STRAIGHT INTO THE VICTORIA TABLE BUT IT'S NICE
## TO SEPARATE THEM AS THEY HAVE DIFFERENT SOURCES, AND THE HISTORIES WILL BE UPDATED
## AS MORE STORIES ARE ADDED

CREATE TABLE IF NOT EXISTS `streets`.`HISTORIES` (
	`ID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY, 
	`NAME` TEXT,
	`ORIGIN` INT, 
	`TYPE` INT, 
	`OCC` INT, 
	`BAND` TEXT, 
	`ESTATE` TEXT, 
	`DISPLAY` TINYINT(1) NOT NULL, 
	`STORY` MEDIUMTEXT, 
	`MUNICIPALITY` TEXT, 
	`LINK` TEXT);



## LOADING DATA. I HAD TO DO ALIASING TO GET AROUND NULL VALUES;
## YOUR DB MAY NOT COMPLAIN LIKE MINE DID

LOAD DATA INFILE '/home/andy/work/streets/HISTORIES_VICTORIAV2.tsv' 
INTO TABLE `streets`.`HISTORIES` 
(NAME, @VORIGIN, @VTYPE, @VOCC, @VBAND, @VESTATE, @VDISPLAY, @VSTORY, @VLINK)
SET ORIGIN = nullif(@VORIGIN,''),
TYPE = nullif(@VTYPE,''),
OCC = nullif(@VOCC,''),
BAND = nullif(@VBAND,''),
ESTATE = nullif(@VESTATE,''),
DISPLAY = nullif(@VDISPLAY,''),
STORY = nullif(@VSTORY,''),
LINK = nullif(@VLINK,'');



## JUST A QUERY TO CHECK TO SEE HOW THESE GUYS JOIN.
## I PUT THE DISPLAY FLAG IN MY HISTORY DATA SO I COULD EASILY SORT OUT WHICH 
## ARE READY TO BE COMBINED AND WHICH HAVE ABSENT DATA

SELECT h.`ORIGIN`, h.`TYPE`, h.`OCC`, h.`BAND`, h.`ESTATE`, h.`STORY`, h.`LINK` FROM HISTORIES h
JOIN VICTORIA v ON v.`NAME` = h.`NAME`
WHERE h.`DISPLAY` = 1;



## I NEEDED THIS CAUSE THERE WAS AN ERROR ABOUT DEFAULT VALUE FOR DISPLAY WHEN
## I TRIED TO RUN THE INSERT OPERATION. NOT SURE HOW GOOD I FEEL BOUT THIS.

SET SQL_MODE = '';




## THIS IS JUST A LIL TEST QUERY THAT I RAN BEFORE RUNNING THE 
## UPDATE STATEMENT BELOW
## JUST TO MAKE SURE MY JOINS WORKED
SELECT v.NAME, v.COORDINATES, h.STORY
FROM VICTORIA v
LEFT OUTER JOIN HISTORIES h ON h.`NAME` = v.`NAME`
WHERE h.DISPLAY = 1;

## NOTE THAT THERE ARE MULTIPLE ENTRIES FOR EACH ROAD IN THE OVERPASS 
## OSM DATA SO THE HISTORIES NEEDED TO BE ATTACHED TO EACH
## YOU COULD ALSO JOIN THOSE GEOMETRIES TOGETHER BUT THAT WOULD 
## BE HELLA WORK

UPDATE VICTORIA v
LEFT OUTER JOIN HISTORIES h ON h.`NAME` = v.`NAME`
SET v.`ORIGIN` = h.`ORIGIN`,
v.`TYPE` = h.`TYPE`,
v.`OCC` = h.`OCC`,
v.`BAND` = h.`BAND`,
v.`ESTATE` = h.`ESTATE`,
v.`STORY` = h.`STORY`,
v.`LINK` = h.`LINK`

WHERE h.DISPLAY = 1;







## FORGOT TO PULL DISPLAY OVER.
UPDATE `VICTORIA` SET `DISPLAY` = 1 WHERE STORY IS NOT NULL;



## MINI-QUERY TO SEE THE JSON OBJECT THAT IS 'geometry'
SELECT JSON_OBJECT('type', v.GEOTYPE, 'coordinates', v.COORDINATES)
FROM VICTORIA v
WHERE DISPLAY = 1;



## ADDING JGEOMETRY INTO VICTORIA
ALTER TABLE `VICTORIA`
ADD COLUMN `JGEOMETRY` LONGTEXT AFTER `LAST_UPDATED`;



## ADDING THE JSON GEOMETRY OBJECT INTO VICTORIA
UPDATE VICTORIA v SET `JGEOMETRY` = JSON_OBJECT('type', v.GEOTYPE, 'coordinates', v.COORDINATES);



## MINI-QUERY TO SEE THE JSON OBJECT THAT IS 'properties'
SELECT JSON_OBJECT(
	'highway', v.HIGHWAY, 
	'name', v.NAME, 
	'origin', v.ORIGIN,
	'type', v.TYPE,
	'occ', v.OCC,
	'estate', v.ESTATE,
	'band', v.BAND,
	'story', v.STORY, 
	'link', v.LINK
	)
FROM VICTORIA v
WHERE DISPLAY = 1;



## ADDING JPROPERTIES INTO VICTORIA
ALTER TABLE `VICTORIA`
ADD COLUMN `JPROPERTIES` LONGTEXT AFTER `JGEOMETRY`;



## ADDING THE JSON PROPERTIES OBJECT INTO VICTORIA
UPDATE VICTORIA v SET `JPROPERTIES` = JSON_OBJECT(
	'highway', v.HIGHWAY, 
	'name', v.NAME, 
	'origin', v.ORIGIN,
	'type', v.TYPE,
	'occ', v.OCC,
	'estate', v.ESTATE,
	'band', v.BAND,
	'story', v.STORY, 
	'link', v.LINK
	);


## MINI-QUERY TO SEE THE FULL JSON OBJECT 
SELECT JSON_ARRAYAGG(JSON_OBJECT(
	'type', 'Feature', 
	'properties', v.JPROPERTIES,
	'geometry', v.JGEOMETRY
	))
FROM VICTORIA v
WHERE DISPLAY = 1;


SELECT (JSON_OBJECT(
	'type', 'Feature', 
	'properties', v.JPROPERTIES,
	'geometry', v.JGEOMETRY
	)) 
FROM VICTORIA v
WHERE DISPLAY = 1
INTO OUTFILE '/home/andy/work/streets/output/victoria.csv'
FIELDS TERMINATED BY ''
ENCLOSED BY ''
LINES TERMINATED BY ',\n'




## NUKE QUOTATION MARKS
UPDATE VICTORIA
SET STORY = REPLACE(STORY, '\"', '\'');

